////
/// Modal component
/// @group modal
/// @since v0.8.5
////

/// Default settings

$modal-default-settings: (
  size: (
    small: 98%,
    medium: 40em,
    large: 60em,
    xlarge: 80em,
    xxlarge: 100em
  )
);

$modal: () !default;
$modal: map-merge-settings($modal-default-settings, $modal);

$include-html-paint-modal: true !default;

@function modal-settings($setting, $property: null) {
  @if $property {
    @return map-get(map-get($modal, $setting), $property);
  } @else {
    @return map-get($modal, $setting);
  }
}

/// Calculate the size of the modal based on the screen size
/// @access private
/// @param {value} $size [large] - Screen size
/// @param {Boolean} $use-content-size [false] - Set to `true` to resize based on the modal content

@mixin modal-size($size: large, $use-content-size: false) {
  $width: modal-settings(size, $size);

  max-width: 98%;

  @if not($use-content-size) {
    min-width: $width;
  }
}

/// Close button styles

@mixin modal-close-button {
  @include button-icon(close);

  position: absolute;
  right: 0;
  top: 0;
  line-height: panel-settings(header-height);
  border: none !important;
  background-color: transparent !important;
  padding: 0 $column-gutter / 2;

  &:before {
    display: inline-block;
  }
}

/// Modal panel styles, including responsive media queries
/// @access private
/// @param {Boolean} $use-content-size [false] - Set to `true` to resize based on the modal content

@mixin modal-panel($use-content-size: false) {
  @extend %panel-default;
  @include panel-background(color(gray, smoke));

  > header {
    font-size: $small-font-size;
    font-weight: $font-weight-bold;
    text-transform: uppercase;

    > .close {
      @include modal-close-button;
    }
  }

  > .content {
    @extend %grid-row;
  }

  @media #{$small-only} {
    @include modal-size(small, $use-content-size);
  }

  @media #{$medium-only} {
    @include modal-size(medium, $use-content-size);
  }

  @media #{$large-only} {
    @include modal-size(large, $use-content-size);
  }

  @media #{$xlarge-only} {
    @include modal-size(xlarge, $use-content-size);
  }

  @media #{$xxlarge-up} {
    @include modal-size(xxlarge, $use-content-size);
  }
}

/// Modal Component
/// @param {Boolean} $use-content-size [false] - Set to `true` to resize based on the modal content
/// @example scss - Usage
///    .custom-modal {
///      @include modal;
///    }
///
/// @example - Markup
///   <div class="modal [active]">
///     <div>
///       <header>
///         <h1>Modal Title</h1>
///         <button class="close"></button>
///       </header>
///
///       <div class="content">
///         //..
///       </div>
///     </div>
///   </div>

@mixin modal($use-content-size: false) {
  @include overlay;

  height: 100%;
  transform-style: preserve-3d;
  text-align: center;

  > div {
    @include modal-panel($use-content-size);

    display: inline-block;
    margin: 0 auto;
    max-height: 98%;
    overflow-y: auto;
    position: relative;
    top: -100%;
    transform: translateY(-100%);
    transition: 
      top $global-transition-duration $global-transition-easing,
      transform $global-transition-duration;
  }

  &.active > div {
    top: 50%;
    transform: translateY(-50%);
  }
}

/// Default classes including component implementation

@include exports('paint-modal') {
  @if $include-html-paint-modal {
    .modal {
      @include modal;
    }
  }
}
