////
/// Panel
/// @group panel
/// @since v0.8.43
////

/// Default settings

/// @example scss - Usage
///   .custom-panel-widget {
///     @extend %panel-widget;
///   }
///
/// @example scss - Custom Panel Styles
///   // paint-settings.scss
///   $panel: (
///     styles: (
///       success: color(success, dark),
///       info: color(info)
///     )
///   );
///
///   // Custom stylesheet
///   .fancy-green-panel {
///     @extend %panel-success;
///   }

$panel-default-settings: (
  header-height: $h1-font-size + $column-gutter,
  footer-height: $h1-font-size + $column-gutter / 2,
  styles: (
    default: color(border, light),
    primary: color(primary),
    link: color(link),
    success: color(success),
    warning: color(warning),
    alert: color(alert),
    info: color(info, light)
  ),
);

$panel: () !default;
$panel: map-merge-settings($panel-default-settings, $panel);

$include-html-paint-panel: true !default;

@function panel-settings($setting, $property: null) {
  @if $property {
    @return map-get(map-get($panel, $setting), $property);
  } @else {
    @return map-get($panel, $setting);
  }
}

/// Panel header background
/// @access private
/// @param {Color} $background-color [color(border, light)] - Sets the panel header background to a gradient and sets the text color dynamically based on the color brightness.

@mixin panel-background(
  $header-background-color: color(border, light),
  $background-color: color(white),
  $footer-background-color: color(white)
) {
  $dark-background-color: desaturate(adjust-hue($header-background-color, 10%), 15%);
  $light-background-color: saturate(adjust-hue($header-background-color, 10%), 15%);

  > header {
    background: linear-gradient(to right, $dark-background-color, $light-background-color);

    * {
      color: contrast($header-background-color);
    }
  }

  .content {
    background-color: $background-color;
  }

  > footer {
    background-color: $footer-background-color;
  }
}

/// The placeholder that holds the base panel styles
/// @access public

%panel {
  backface-visibility: hidden;
  background-color: color(white);
  border: 1px solid color(border);
  border-radius: $global-radius;
  box-shadow: 0 2px 1px color(border);

  > header,
  > footer {
    a {
      font-weight: $font-weight-bold;
    }

    i {
      margin-right: $column-gutter / 4;
    }
  }

  > header {
    border-radius: $global-radius $global-radius 0 0;

    h1 {
      font-size: $base-font-size;
      font-weight: $font-weight-bold;
      letter-spacing: 0;
      line-height: panel-settings(header-height);
      margin: 0;
      padding: 0 $column-gutter / 2;
    }
  }
}

/// Generates all panel variation placeholders defined in the settings
/// @access private
/// @param {Map} $styles [panel-settings(styles)] - The style variations map

@mixin panel-placeholders(
  $styles: panel-settings(styles)
) {
  @each $style, $background-color in $styles {
    %panel-#{$style} {
      @extend %panel;
      @include panel-background($background-color);
    }
  }
}

@include exports('paint-panel') {
  @include panel-placeholders;
}
