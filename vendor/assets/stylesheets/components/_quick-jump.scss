$quick-jump: () !default;
$quick-jump-default-settings: (
  bar: (
    background-color: #e1e5ea,
    active-background-color: color(white),
    icon-size: $button-icon-size,
    height: navigation-settings(height)
  ),
  results: (
    background-color: color(gray, white-smoke),
    item-height: rem(50)
  ),
  actions: (
    navigation: (
      change-app: th,
      add: plus
    )
  )
);

$quick-jump: map-merge-settings($quick-jump-default-settings, $quick-jump);

$include-html-paint-quick-jump: true !default;

@function quick-jump-settings($setting, $property: null) {
  @if $property {
    @return map-get(map-get($quick-jump, $setting), $property);
  } @else {
    @return map-get($quick-jump, $setting);
  }
}

@mixin quick-jump($overlay: true) {
  @if $overlay {
    @include overlay;
  }

  > .bar {
    background-color: quick-jump-settings(bar, background-color);
    display: block;
    height: quick-jump-settings(bar, height);
    line-height: quick-jump-settings(bar, height);
    padding: 0 $column-gutter / 2;
    position: relative;
    width: 100%;

    > div,
    > .icon {
      border-radius: $global-rounded;
      color: color(primary);
      height: quick-jump-settings(bar, icon-size);
      overflow: hidden;
      position: absolute;
      text-align: center;
      top: (quick-jump-settings(bar, height) - quick-jump-settings(bar, icon-size)) / 2;
      transition: all $global-transition-duration / 2 linear;
      width: quick-jump-settings(bar, icon-size);

      i {
        @include icon(search);

        display: block;
        line-height: quick-jump-settings(bar, icon-size);
      }
    }

    input {
      $icon-size: quick-jump-settings(bar, icon-size);
      $input-left-padding: $icon-size * 1.15;

      background-color: transparent;
      border: 0;
      box-shadow: none;
      display: inline-block;
      margin: 0;
      text-indent: $input-left-padding;
      transition: all $global-transition-duration / 2 linear;
      width: 100%;

      &:focus {
        outline: none;
      }
    }
  }

  &.active {
    > .bar {
      background-color: quick-jump-settings(bar, active-background-color);
      border-bottom: 1px solid quick-jump-settings(bar, background-color);

      > div,
      > .icon {
        background-color: color(primary);
        color: quick-jump-settings(bar, active-background-color);
      }
    }

    > .actions {
      .content {
        display: none;
      }

      .close {
        display: block;
      }
    }
  }

  &.loading {
    .results .content {
      opacity: .7;
    }
  }
}

@mixin quick-jump-actions {
  $quick-jump-actions: quick-jump-settings(actions);

  @each $action-group, $actions in $quick-jump-actions {
    .#{$action-group}-actions {
      @each $action, $icon in $actions {
        .#{$action} {
          @include button-icon($icon);
        }
      }
    }
  }
}

%quick-jump-actions-section {
  $actions-button-size: quick-jump-settings(bar, icon-size);

  padding: 0 $column-gutter;
  position: absolute;
  right: 0;
  text-align: right;
  top: (quick-jump-settings(bar, height) - $actions-button-size) / 2;

  .close {
    display: none;

    > button {
      @include icon(times-circle);

      background-color: transparent;
      border: 0;
      height: $actions-button-size;
      padding: 0;
    }
  }

  .content {
    @include quick-jump-actions;

    ul {
      @extend %button-group;
    }
  }
}

%quick-jump-results {
  $background-color: quick-jump-settings(results, background-color);

  background-color: $background-color;
  position: relative;
  transition: opacity $global-transition-duration / 2 linear;
  width: 100%;

  section {
    @extend %grid-row;

    padding-bottom: $column-gutter / 2;
    padding-top: $column-gutter / 2;

    > .title {
      @extend %grid-column-2;

      color: color(primary);
      line-height: quick-jump-settings(results, item-height);
      margin-bottom: 0;
      margin-top: 0;
      text-align: right;

      @media #{$medium-down} {
        display: none;
      }
    }

    &:nth-of-type(even) {
      background-color: darken($background-color, 3%);
    }

    ul {
      @extend %grid-column-small-12;
      @extend %grid-column-medium-10;

      margin-bottom: 0;
    }

    li {
      line-height: quick-jump-settings(results, item-height);
    }

    article {
      @extend %grid-column-12;

      cursor: pointer;

      &:hover,
      &.focused {
        background-color: lighten($background-color, 3%);
      }

      .title {
        color: color(text);
        line-height: quick-jump-settings(results, item-height);
      }
    }
  }

  .empty-message {
    height: quick-jump-settings(bar, height);
    line-height: quick-jump-settings(bar, height);
    padding-left: $column-gutter + rem(quick-jump-settings(bar, icon-size));
  }
}

%quick-jump-result {
  .title,
  .details {
    line-height: quick-jump-settings(results, item-height);
  }

  .title {
    @extend %grid-column-small-12;
    @extend %grid-column-large-4;

    font-size: $base-font-size;
    margin: 0;
  }

  .details {
    @extend %grid-column-small-12;
    @extend %grid-column-large-8;

    color: color(text, small);
  }
}

@include exports('paint-quick-jump') {
  @if $include-html-paint-quick-jump {
    .quick-jump {
      @include quick-jump;

      .actions {
        @extend %quick-jump-actions-section;
      }

      .results {
        @extend %quick-jump-results;

        .result {
          @extend %quick-jump-result;
        }
      }
    }
  }
}
