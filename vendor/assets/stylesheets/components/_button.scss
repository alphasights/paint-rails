////
/// Buttons Component
/// @group button
/// @since v0.9.0
////

$button-base-background-color: color(white) !default;
$button-base-text-color: color(gray, jumbo) !default;
$button-base-padding: 15px !default;
$button-icon-size: 28px !default;
$button-disabled-transparency: .4 !default;
$button-disabled-hover-transparency: .2 !default;
$button-tiny-height: 24px !default;
$button-small-height: 38px !default;
$button-large-height: 50px !default;

/// Default button styles

$button-colors: (
  base: color(text, small),
  primary: color(link),
  secondary: color(secondary),
  alert: color(alert),
  error: color(alert),
  warning: color(warning),
  success: color(success),
  info: color(info)
);

$include-html-paint-button: true !default;

/// Generate a button with icon
/// @param {String} $icon - The icon name
/// @example scss
///   .dasboard-button {
///     @include button-icon(dashboard);
///   }

@mixin button-icon($icon) {
  @extend %button-icon;
  @include icon($icon);
}

/// Disabled button styles
/// @access private

@mixin button-disabled() {
  background-color: transparentize(
    $button-base-background-color,
    $button-disabled-transparency);
  border-color: darken($button-base-background-color, 5%);
  box-shadow: none;
  color: transparentize(
    $button-base-text-color,
    $button-disabled-transparency);
  cursor: not-allowed;

  &:hover,
  &:focus {
    background-color: transparentize(
      $button-base-background-color,
      $button-disabled-hover-transparency);
    color: transparentize(
      $button-base-text-color,
      $button-disabled-hover-transparency);
  }
}

/// Button with icon placeholder
/// @access private

%button-icon {
  padding: 0;

  &:before {
    display: block;
    line-height: $button-icon-size;
    width: $button-icon-size;
  }
}

/// Button resets

#{$all-buttons} {
  appearance: none;
  border: 0;
  border-radius: $global-radius;
  cursor: pointer;
  display: inline-block;
  font-family: $base-font-family;
  font-size: $small-font-size;
  -webkit-font-smoothing: $heading-font-smoothing;
  font-weight: $font-weight-normal;
  line-height: $base-line-height;
  padding: $small-spacing $base-spacing;
  text-decoration: none;
  text-transform: uppercase;
  transition: background-color $global-transition-duration / 2 ease;
  user-select: none;
  vertical-align: middle;
  white-space: nowrap;

  &:hover,
  &:focus {
    background-color: color(border, light);
    outline: none;
  }

  &:disabled {
    cursor: not-allowed;
    opacity: .5;

    &:hover {
      background-color: color(border);
    }
  }
}

/// Default button styles

%button {
  background-color: $button-base-background-color;
  border: 1px solid lighten($button-base-text-color, 20%);
  border-radius: $global-radius;
  color: $button-base-text-color;
  transition: color $global-transition-duration / 2 ease;

  &:hover,
  &:focus {
    color: darken($button-base-text-color, 20%);
  }

  &:focus {
    outline: 0;
  }

  &:disabled,
  &.disabled,
  &[disabled] {
    @include button-disabled;
  }
}

/// Solid button styles
/// @access private

@mixin button-solid(
  $bg: color(white),
  $color: color(primary)
) {
  background-color: $bg;
  border-radius: $global-radius;
  border: 1px solid $color;
  color: $color;
  font-size: $small-font-size;
  font-weight: $font-weight-bold;
  padding: $button-base-padding;
  text-transform: uppercase;

  &:focus {
    background-color: $bg;
    color: $color;
  }

  &:hover {
    background-color: $color;
    border-color: $bg;
    color: $bg;
  }
}

/// Generate all button styles placeholders
/// @access private

@mixin button-color-placeholders {
  @each $type, $button-color in $button-colors {
    %button-#{$type} {
      @include button-solid($color: $button-color);
    }

    %button-#{$type}-inverted {
      @include button-solid($bg: $button-color, $color: contrast($button-color, $dark: color(text)));

      border-color: transparent;
    }
  }
}

/// Tiny button styles
/// @require {placeholder} button

%button-tiny {
  line-height: $button-tiny-height;
  padding: 0 $button-base-padding / 2;
}

/// Small button styles
/// @require {placeholder} button

%button-small {
  line-height: $button-small-height;
  padding: 0 $button-base-padding / 2;
}

/// Large button styles
/// @require {placeholder} button

%button-large {
  line-height: $button-large-height;
  padding: 0 $button-base-padding * 2;
}

/// Rounded button style
/// @require {placeholder} button

%button-rounded {
  border-radius: $global-rounded;
}

/// Button Group
///
/// @example scss
/// .button-group {
///   @extend %button-group;
/// }
///
/// @example
///   <ul class="button-group">
///     <li><button class="cog"></button></li>
///     <li><button class="dashboard">Dashboard</button></li>
///     <li><button class="clock"></button></li>
///   </ul>

%button-group {
  @include clearfix();

  display: inline-block;
  list-style: none;
  margin: 0;
  white-space: nowrap;

  &:not(:first-child) {
    padding-left: $button-base-padding / 2;
  }

  > li {
    display: inline-block;
    margin: 0 -2px 0 -1px;

    button {
      border-color: color(border);
      border-radius: 0;
      border-right: 0;
      line-height: $button-icon-size;
      padding: 0 $button-base-padding;

      &:before {
        display: inline-block;
      }

      &:not(:empty):before {
        margin-left: -$button-base-padding;
      }
    }

    &:first-child {
      margin-left: 0;

      &,
      button {
        @include border-left-radius($global-radius);
      }
    }

    &:last-child {
      margin-right: 0;

      &,
      button {
        @include border-right-radius($global-radius);
      }

      button {
        border-right: solid 1px color(border);
      }
    }

  }
}

@include exports('paint-button') {
  @include button-color-placeholders;

  @if $include-html-paint-button {
    button {
      @extend %button;
    }
  }
}
